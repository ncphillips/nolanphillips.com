---
import { basename } from 'path'
import Layout from '../../layouts/Layout.astro'
import SidebarLayout from '../../layouts/Sidebar';
import { CardArticle } from '../../components/CardArticle';
import typography from '../../components/typography'
import Heading from '../../components/typography/Heading';
import { prettyDate } from '../../lib/prettyDate';
import Text from '../../components/typography/Text';

const title = "Writing"
const articles = (await Astro.glob('../../content/articles/*.mdx')).map(article => ({
  ...article,
  slug: basename(article.file).split('.')[0]
}))
  .filter(article => article.frontmatter.category === Astro.params.category)
  .sort((a, b) => Date.parse(b.frontmatter.created) - Date.parse(a.frontmatter.created))
const article = articles.find(article => article.slug === Astro.params.slug)!
const { Content } = article

export async function getStaticPaths() {
  const articles = (await Astro.glob('../../content/articles/*.mdx')).map(article => ({
    ...article,
    slug: basename(article.file).split('.')[0]
  }))

  return articles.map(article => ({
    params: { slug: article.slug, category: article.frontmatter.category }
  }))
}
---
<Layout title={article.frontmatter.title}>
  <SidebarLayout.Header title={article.frontmatter.title} />
  <SidebarLayout>
    <SidebarLayout.Sidebar client:idle />
    <SidebarLayout.Panel title={title} selected={true}>
      <div class="-mx-4 flex flex-col">
        {articles.map(article => (
          <CardArticle article={article} active={article.slug === Astro.params.slug} />
        ))}
      </div>
    </SidebarLayout.Panel>
    <SidebarLayout.Pane dots>
      <article class="flex flex-col items-center w-full min-h-screen bg-white dark:bg-black p-5 lg:pt-16">
        <div class="flex flex-col gap-2 w-full max-w-prose">
          <Heading as='h1' size={1}>
            {article.frontmatter.title}
          </Heading>
          <Text color='muted'>
            <span class="break-keep">{prettyDate(article.frontmatter.created)} Â· {(article as any).readingTime.text} min read</span>
          </Text>
          <Content components={{ ...typography }} />
        </div>
      </article>
    </SidebarLayout.Pane>
  </SidebarLayout>
</Layout>
